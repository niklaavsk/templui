package components

import (
	"github.com/axzilla/templui/icons"
	"github.com/axzilla/templui/utils"
)

type BreadcrumbProps struct {
	ID         string
	Class      string
	Attributes templ.Attributes
}

type BreadcrumbListProps struct {
	ID         string
	Class      string
	Attributes templ.Attributes
}

type BreadcrumbItemProps struct {
	ID         string
	Class      string
	Attributes templ.Attributes
	Current    bool
}

type BreadcrumbLinkProps struct {
	ID         string
	Class      string
	Attributes templ.Attributes
	Href       string
}

type BreadcrumbSeparatorProps struct {
	ID         string
	Class      string
	Attributes templ.Attributes
	UseCustom  bool
}

templ Breadcrumb(props ...BreadcrumbProps) {
	{{ var p BreadcrumbProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	<nav
		if p.ID != "" {
			id={ p.ID }
		}
		class={
			utils.TwMerge(
				"flex",
				p.Class,
			),
		}
		aria-label="Breadcrumb"
		{ p.Attributes... }
	>
		{ children... }
	</nav>
}

templ BreadcrumbList(props ...BreadcrumbListProps) {
	{{ var p BreadcrumbListProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	<ol
		if p.ID != "" {
			id={ p.ID }
		}
		class={
			utils.TwMerge(
				"flex items-center flex-wrap gap-1 text-sm",
				p.Class,
			),
		}
		{ p.Attributes... }
	>
		{ children... }
	</ol>
}

templ BreadcrumbItem(props ...BreadcrumbItemProps) {
	{{ var p BreadcrumbItemProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	<li
		if p.ID != "" {
			id={ p.ID }
		}
		class={
			utils.TwMerge(
				"flex items-center",
				p.Class,
			),
		}
		{ p.Attributes... }
	>
		{ children... }
	</li>
}

templ BreadcrumbLink(props ...BreadcrumbLinkProps) {
	{{ var p BreadcrumbLinkProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	<a
		if p.ID != "" {
			id={ p.ID }
		}
		if p.Href != "" {
			href={ templ.SafeURL(p.Href) }
		}
		class={
			utils.TwMerge(
				"text-muted-foreground hover:text-foreground hover:underline flex items-center gap-1.5 transition-colors",
				p.Class,
			),
		}
		{ p.Attributes... }
	>
		{ children... }
	</a>
}

templ BreadcrumbSeparator(props ...BreadcrumbSeparatorProps) {
	{{ var p BreadcrumbSeparatorProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	<span
		if p.ID != "" {
			id={ p.ID }
		}
		class={
			utils.TwMerge(
				"mx-2 text-muted-foreground",
				p.Class,
			),
		}
		{ p.Attributes... }
	>
		if p.UseCustom {
			{ children... }
		} else {
			@icons.ChevronRight(icons.IconProps{Size: 14, Class: "text-muted-foreground"})
		}
	</span>
}

templ BreadcrumbPage(props ...BreadcrumbItemProps) {
	{{ var p BreadcrumbItemProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	<span
		if p.ID != "" {
			id={ p.ID }
		}
		class={
			utils.TwMerge(
				"font-medium text-foreground flex items-center gap-1.5",
				p.Class,
			),
		}
		aria-current="page"
		{ p.Attributes... }
	>
		{ children... }
	</span>
}
