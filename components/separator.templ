package components

import "github.com/axzilla/templui/utils"

type SeparatorOrientation string
type SeparatorDecoration string

const (
	SeparatorOrientationHorizontal SeparatorOrientation = "horizontal"
	SeparatorOrientationVertical   SeparatorOrientation = "vertical"
)

const (
	SeparatorDecorationNone   SeparatorDecoration = "none"
	SeparatorDecorationDashed SeparatorDecoration = "dashed"
	SeparatorDecorationDotted SeparatorDecoration = "dotted"
)

type SeparatorProps struct {
	ID          string
	Class       string
	Attributes  templ.Attributes
	Orientation SeparatorOrientation
	Decoration  SeparatorDecoration
	Label       string
}

templ Separator(props ...SeparatorProps) {
	{{ var p SeparatorProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	if p.Orientation == "" {
		{{ p.Orientation = SeparatorOrientationHorizontal }}
	}
	<div
		if p.ID != "" {
			id={ p.ID }
		}
		role="separator"
		aria-orientation={ string(p.Orientation) }
		class={
			utils.TwMerge(
				"shrink-0",
				utils.If(!(p.Label != "" && p.Orientation == SeparatorOrientationHorizontal),
					utils.If(!(p.Label != "" && p.Orientation == SeparatorOrientationVertical),
						getOrientationClasses(p.Orientation),
					),
				),
				utils.If(p.Orientation == SeparatorOrientationHorizontal, "h-[1px] w-full"),
				utils.If(p.Orientation == SeparatorOrientationVertical, "h-full w-[1px]"),
				utils.If(!(p.Label != "" && p.Orientation == SeparatorOrientationHorizontal),
					utils.If(!(p.Label != "" && p.Orientation == SeparatorOrientationVertical),
						getDecorationClasses(p.Decoration),
					),
				),
				p.Class,
			),
		}
		{ p.Attributes... }
	>
		if p.Label != "" && p.Orientation == SeparatorOrientationHorizontal {
			<div class="relative flex items-center w-full">
				<span
					class={
						utils.TwMerge(
							"absolute w-full border-t",
							getDecorationClasses(p.Decoration),
						),
					}
					aria-hidden="true"
				></span>
				<span class="relative mx-auto bg-background px-2 text-xs text-muted-foreground">
					{ p.Label }
				</span>
			</div>
		} else if p.Label != "" && p.Orientation == SeparatorOrientationVertical {
			<div class="relative flex flex-col items-center h-full">
				<span
					class={
						utils.TwMerge(
							"absolute h-full border-l",
							getDecorationClasses(p.Decoration),
						),
					}
					aria-hidden="true"
				></span>
				<span class="relative my-auto bg-background px-2 text-xs text-muted-foreground">
					{ p.Label }
				</span>
			</div>
		}
	</div>
}

func getOrientationClasses(orientation SeparatorOrientation) string {
	if orientation == SeparatorOrientationVertical {
		return "border-l"
	}
	return "border-t"
}

func getDecorationClasses(decoration SeparatorDecoration) string {
	switch decoration {
	case SeparatorDecorationDashed:
		return "border-dashed"
	case SeparatorDecorationDotted:
		return "border-dotted"
	default:
		return ""
	}
}
