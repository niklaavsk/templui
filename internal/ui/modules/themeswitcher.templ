package modules

import (
	"github.com/axzilla/templui/components"
	"github.com/axzilla/templui/icons"
)

templ themeSwitcherHandler() {
	{{ handle := templ.NewOnceHandle() }}
	@handle.Once() {
		<script nonce={ templ.GetNonce(ctx) }>
			document.addEventListener('alpine:init', () => {
				Alpine.data('themeSwitcherHandler', () => ({
					isDarkMode() {
						return this.isDark
					},
					isLightMode() {
						return !this.isDark
					}
				}))
			})
		</script>
	}
}

type ThemeSwitcherProps struct {
	Class string
}

templ ThemeSwitcher(props ...ThemeSwitcherProps) {
	{{ var p ThemeSwitcherProps }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	@themeSwitcherHandler()
	@components.Button(components.ButtonProps{
		Size:    components.ButtonSizeIcon,
		Variant: components.ButtonVariantGhost,
		Class:   p.Class,
		Attributes: templ.Attributes{
			"@click": "toggleTheme",
		},
	}) {
		@icons.SunMedium()
	}
}

templ DynamicThemeIcon() {
	<div x-data="themeSwitcherHandler">
		<span x-show="isDarkMode" class="block">
			@LightIcon()
		</span>
		<span x-show="isLightMode" class="block">
			@DarkIcon()
		</span>
	</div>
}

templ DarkIcon() {
	@icons.Moon()
}

templ LightIcon() {
	@icons.SunMedium()
}
