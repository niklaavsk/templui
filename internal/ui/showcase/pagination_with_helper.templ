package showcase

import (
	"fmt"
	"github.com/axzilla/templui/components"
)

templ PaginationWithHelper() {
	{{ pagination := components.CreatePagination(5, 20, 3) }}
	@components.Pagination() {
		@components.PaginationContent() {
			@components.PaginationItem() {
				@components.PaginationPrevious(components.PaginationPreviousProps{
					Href:     fmt.Sprintf("?page=%d", pagination.CurrentPage-1),
					Disabled: !pagination.HasPrevious,
				})
			}
			// First page with ellipsis if needed
			if pagination.Pages[0] > 1 {
				@components.PaginationItem() {
					@components.PaginationLink(components.PaginationLinkProps{
						Href: "?page=1",
					}) {
						1
					}
				}
				if pagination.Pages[0] > 2 {
					@components.PaginationItem() {
						@components.PaginationEllipsis()
					}
				}
			}
			// Visible pages
			for _, page := range pagination.Pages {
				@components.PaginationItem() {
					@components.PaginationLink(components.PaginationLinkProps{
						Href:     fmt.Sprintf("?page=%d", page),
						IsActive: page == pagination.CurrentPage,
					}) {
						{ fmt.Sprint(page) }
					}
				}
			}
			// Last page with ellipsis if needed
			if pagination.Pages[len(pagination.Pages)-1] < pagination.TotalPages {
				if pagination.Pages[len(pagination.Pages)-1] < pagination.TotalPages-1 {
					@components.PaginationItem() {
						@components.PaginationEllipsis()
					}
				}
				@components.PaginationItem() {
					@components.PaginationLink(components.PaginationLinkProps{
						Href: fmt.Sprintf("?page=%d", pagination.TotalPages),
					}) {
						{ fmt.Sprint(pagination.TotalPages) }
					}
				}
			}
			@components.PaginationItem() {
				@components.PaginationNext(components.PaginationNextProps{
					Href:     fmt.Sprintf("?page=%d", pagination.CurrentPage+1),
					Disabled: !pagination.HasNext,
				})
			}
		}
	}
}
